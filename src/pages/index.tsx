import Head from "next/head";

import styles from "./index.module.css";
import { SignInButton, useUser } from "@clerk/nextjs";
import { type RouterOutputs, api } from "~/utils/api";
import { type NextPage } from "next";
import Image from "next/image";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className={styles.profileImageContainer}>
      <Image
        width={200}
        height={200}
        className={styles.profileImage}
        src={user.imageUrl}
        alt="Profile image"
      />
      <input className={styles.emojiInput} placeholder="Type some emojis!" />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;

  return (
    <div className={styles.post}>
      <Image
        width={200}
        height={200}
        className={styles.profileImage}
        src={author.profilePicture}
        alt={`@${author.name}'s profile picture`}
      />
      <div className={styles.postContent}>
        <div className={styles.postAuthor}>
          <span>{`@${author.name}`}</span>
          <span>Â·</span>
          <span className={styles.postTime}>
            {dayjs(post.createdAt).fromNow()}
          </span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();
  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>;

  if (!data) return <div>Something went wrong.</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.mainContent}>
          <div className={styles.topNav}>
            {!user.isSignedIn && <SignInButton />}
            {!!user.isSignedIn && (
              <>
                <CreatePostWizard />
              </>
            )}
          </div>
          <div className={styles.postContainer}>
            {data.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
